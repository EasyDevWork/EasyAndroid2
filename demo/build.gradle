if (demo_app == "true") {
    apply plugin: 'com.android.application'
} else {
    apply plugin: 'com.android.library'
}

def config = rootProject.ext.android
def lib = rootProject.ext.dependencies

android {
    compileSdkVersion config.compileSdkVersion
    defaultConfig {
        minSdkVersion config.minSdkVersion
        targetSdkVersion config.targetSdkVersion
        versionCode config.versionCode
        versionName config.versionName
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [moduleName: project.getName()]
                arguments = [AROUTER_MODULE_NAME: project.getName()]
            }
        }
        if (demo_app == "true") {
            applicationId config.applicationId
            multiDexEnabled true
            flavorDimensions "default"
            ndk {
                abiFilters 'armeabi-v7a' /*,'arm64-v8a', 'x86_64',"x86"*/
            }
        }
    }
    dataBinding {
        enabled true
    }

    compileOptions {
        sourceCompatibility 1.8
        targetCompatibility 1.8
    }

    repositories {
        flatDir {
            dirs 'libs'
        }
    }

    lintOptions {
        abortOnError true
        checkReleaseBuilds false
    }
    if (demo_app == "true") {
        buildTypes {
            release {
                minifyEnabled true
                zipAlignEnabled true
                consumerProguardFiles 'proguard-rules.pro'
            }
            debug {
                minifyEnabled true
                zipAlignEnabled true
                consumerProguardFiles 'proguard-rules.pro'
            }
        }

        sourceSets.main {
            jni.srcDirs = []
            jniLibs.srcDir "src/main/libs"
            if (demo_app) {
                manifest.srcFile 'src/main/AppAndroidManifest.xml'
            } else {
                manifest.srcFile 'src/main/AndroidManifest.xml'
            }
        }

        productFlavors {
            mTest {
                buildConfigField "boolean", "DEMO_APP", "${demo_app}"
//            applicationIdSuffix ".test"
            }
            official {
                buildConfigField "boolean", "DEMO_APP", "${demo_app}"
            }
        }
        signingConfigs {
            release {
                storeFile file("../app/" + config.keyStoreFile)
                storePassword config.storePassword
                keyAlias config.keyAlias
                keyPassword config.keyPassword
                v1SigningEnabled true
                v2SigningEnabled true
            }
            debug {
                storeFile file("../app/debug.keystore")
            }
        }
        buildTypes {
            release {
                signingConfig signingConfigs.release
                minifyEnabled true
                zipAlignEnabled true
                shrinkResources true
                multiDexEnabled true
                proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
                android.applicationVariants.all { variant ->
                    variant.outputs.all { output ->
                        outputFileName = "${config.appName}_${variant.productFlavors[0].name}_${variant.versionName}_${variant.versionCode}.apk"
                    }
                }
            }

            debug {
                signingConfig signingConfigs.debug
                minifyEnabled false
                shrinkResources false
                zipAlignEnabled true
                multiDexEnabled true
                proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
                android.applicationVariants.all { variant ->
                    variant.outputs.all { output ->
                        outputFileName = "${config.appName}_${variant.productFlavors[0].name}_${variant.versionName}_${variant.versionCode}.apk"
                    }
                }
            }
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    annotationProcessor lib.dagger_compiler

    api lib.easy_apt
    annotationProcessor lib.easy_apt_compiler

    implementation project(':qrcode')
    implementation project(':imagezoom')
    implementation project(':eoschain')
    implementation project(':wechat')
    implementation project(':aliplayer')
    implementation project(':lottie')
    api project(':Framework')

    implementation lib.rxbinding

    implementation project(':aidl')

    implementation project(':flutter')

    implementation project(':libtv')

    api project(':skin')

    api project(':im_lib')

    implementation project(':ndk')

    implementation lib.androidx_leanback
    implementation lib.androidx_lifecycle_extensions

    releaseImplementation lib.objectbox_android
    debugImplementation lib.objectbox_browser

    implementation lib.aspectjrt
}

if (demo_app == "false") {
    apply from: "../aspect.gradle"
}



