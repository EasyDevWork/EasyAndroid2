apply plugin: 'com.android.library'

def config = rootProject.ext.android
def lib = rootProject.ext.dependencies

android {
    compileSdkVersion 29

    compileSdkVersion config.compileSdkVersion
    defaultConfig {
        minSdkVersion config.minSdkVersion
        targetSdkVersion config.targetSdkVersion
        versionCode config.versionCode
        versionName config.versionName
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [moduleName: project.getName()]
                arguments = [AROUTER_MODULE_NAME: project.getName()]
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled true
            zipAlignEnabled true
            consumerProguardFiles 'proguard-rules.pro'
        }
        debug {
            minifyEnabled true
            zipAlignEnabled true
            consumerProguardFiles 'proguard-rules.pro'
        }
    }

    dataBinding {
        enabled true
    }

    compileOptions {
        sourceCompatibility 1.8
        targetCompatibility 1.8
    }

    repositories {
        flatDir {
            dirs 'libs'
        }
    }
    lintOptions {
        abortOnError true
        checkReleaseBuilds false
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    annotationProcessor lib.dagger_compiler

    api lib.easy_apt
    annotationProcessor lib.easy_apt_compiler

    implementation project(':qrcode')
    implementation project(':imagezoom')
    implementation project(':eoschain')
    implementation project(':wechat')
    implementation project(':aliplayer')
    implementation project(':lottie')
    api project(':Framework')

    implementation project(':libtv')
    implementation lib.androidx_leanback
    implementation lib.androidx_lifecycle_extensions

    releaseImplementation lib.objectbox_android
    debugImplementation lib.objectbox_browser

    implementation lib.aspectjrt
}

import org.aspectj.bridge.IMessage
import org.aspectj.bridge.MessageHandler
import org.aspectj.tools.ajc.Main
final def log = project.logger
final def variants = project.android.libraryVariants

variants.all {  variant ->
    JavaCompile javaCompile = variant.javaCompile
    javaCompile.doLast {
        String[] args = ["-showWeaveInfo",
                         "-1.5",
                         "-inpath", javaCompile.destinationDir.toString(),
                         "-aspectpath", javaCompile.classpath.asPath,
                         "-d", javaCompile.destinationDir.toString(),
                         "-classpath", javaCompile.classpath.asPath,
                         "-bootclasspath", project.android.bootClasspath.join(File.pathSeparator)]
        println "ajc args: " + Arrays.toString(args)

        MessageHandler handler = new MessageHandler(true)
        new Main().run(args, handler)

        for (IMessage message : handler.getMessages(null, true)) {
            switch (message.getKind()) {
                case IMessage.ABORT:
                case IMessage.ERROR:
                case IMessage.FAIL:
                    log.error message.message, message.thrown
                    break;
                case IMessage.WARNING:
                    log.warn message.message, message.thrown
                    break;
                case IMessage.INFO:
                    log.info message.message, message.thrown
                    break;
                case IMessage.DEBUG:
                    log.debug message.message, message.thrown
                    break;
            }
        }
    }
}



